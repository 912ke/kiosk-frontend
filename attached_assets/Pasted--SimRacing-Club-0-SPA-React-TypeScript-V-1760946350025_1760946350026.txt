ТЗ: Фронтенд для киоска SimRacing Club
0) Общие требования

Платформа: SPA на React + TypeScript + Vite + TailwindCSS (быстро в Replit).

Ориентация: портретный киоск 1080×1920 (и адаптация под 1920×1080), сайт на весь экран (kiosk mode).

Управление: сенсор (без физклавы), крупные таргеты (минимум 48×48dp), онскрин-клавиатура/нумпад.

Языки: RU (обяз.), EN/KZ (опц., через i18n).

Тема: современный тёмный (dark), высококонтрастный, минимум отвлекающих деталей.

Производительность: загрузка < 2 c на локалке, Lighthouse Perf > 90.

Деплой: билд → статика (папка dist/) → копируем в ~/club-backend/public и пересобираем Docker образ api.

1) Информация и интеграции (бэкенд)

Подключение к локальному API (у тебя уже есть):

GET /api/catalog — информация клуба (название, адрес, валюта, услуги). Может быть source: local.

GET /api/hosts?include_offline=false&only_groups=true — список станций с состояниями.

GET /api/slots?date=YYYY-MM-DD&start=HH:mm&end=HH:mm&duration_minutes=60&step_minutes=30&count=1 — доступные слоты на день.

POST /api/book — создание брони:
body: { hosts:number[], from:"YYYY-MM-DD HH:mm:ss", to:"YYYY-MM-DD HH:mm:ss", comment?:string }
ответ: { ok:true, booking:{ id, hosts, from, to, status } }.

Планируемые (подготовить контракты в UI):

POST /api/clients/register — регистрация; вход по телефону (OTP) или простая регистрация (временная).

GET /api/clients/:id/balance — баланс депозита.

POST /payments/kaspi/create-invoice — создать счёт (QR/ссылка).

GET /payments/kaspi/status?id=... — статус платежа.

POST /api/book/cancel — отмена (разрешена ≥ 2 часа до старта).

На первом этапе UI будет работать без авторизации: просмотр услуг/слотов, бронирование (как гость) — ОК.
Когда включим Kaspi и депозиты — в бронировании появится проверка «хватает ли депозита».

2) Разделы/экраны (логика)
2.1 Главная

Крупный логотип/название, адрес, часы работы.

Кнопки-«плитки»: Регистрация, Пополнить депозит, Бронирование, О нас.

Внизу — «Помощь администратора» (вызывает помощь) и «Изменить язык» (если включим i18n).

Авто-таймаут неактивности: возврат на главную через 60 сек.

2.2 Регистрация клиента

Поля: Телефон (обязательно, маска +7 XXX XXX XX XX), Имя (обяз.), Email (опц.), Соглашение (чекбокс).

Если появится OTP: «Отправить код» → ввод 4–6 цифр (онскрин-клавиатура).

После успеха — локальная сессия (token/идентификатор), отображение имени в хедере (или в шапке блока).

Если пока без бэкенда — сохранить «черновик» в sessionStorage; кнопку «Закончить» — возвращает на Главную.

2.3 Пополнение депозитного счета

Требует клиента (телефон/аккаунт). На первом этапе — ввод телефона вручную + имя (если нет).

Выбор суммы (кнопки: 3k / 5k / 10k / «Другая сумма») → онскрин-нумпад.

Кнопка «Оплатить Kaspi QR»:

Запрос POST /payments/kaspi/create-invoice (когда подключим).

Показ QR (рендер qrcode) и таймер 5–10 минут.

Кнопка «Оплатил» → GET /payments/kaspi/status (polling раз в 3–5 сек, до 60 сек).

При успешной оплате → экран «Готово» + возврат на главную через 10 сек.

Временный режим без API: заглушка — QR-пример и кнопка «Готово (имитация)».

2.4 Бронирование

Шаги:

Зал/Станции: выбор зала (по group_id, фильтрация /api/hosts), отображение online/offline, количество свободных.

Когда: дата (сегодня/завтра/календарь), время только 12:00–00:00, шаг 30 минут, длительность (60/90/120), количество ригов.

Слоты: запрос /api/slots, список тайм-тайлов: «12:00–13:00, доступно N, [Забронировать]».

Подтверждение: «Вы бронируете X ригов, время, зал. Оплата: депозит».
Если депозит недоступен (позже) — показывать «Пополнить депозит».

Результат: № брони, QR/штрихкод (опц.), кнопка «На главную».

Ограничение: Кнопка «Отменить бронь» показывается, если до начала ≥ 2 часа (после появления API cancel).

2.5 О нас

Текст/фото клуба, правила, контакты, соцсети.

QR для перехода на телеграм/инстаграм (сканировать с телефона).

3) Навигация и состояния

Маршруты (React Router):

/ — Главная

/register

/deposit

/booking (мастер)

/about

/success (универсальный экран “Готово”)

Состояние (Zustand):

client: { id?, phone, name, token? }

booking: { hallId?, hostIds[], date, from, to, duration, count }

deposit: { amount, invoiceId?, status }

ui: { loading, error, idleTimerMs }

Валидаторы (Zod) для форм: телефон, суммы, границы времени.

4) Дизайн и UI-гайд

Сетка: 12-колоночная, в портрете — 1–2 колонки; безопасные отступы 24–32px; контент max-width 900px.

Тема: Dark

Background: #0B0B0D

Surface: #15151A

Text: #F5F6F8 / Secondary #A5A8AE

Accent: #FF4655 (или фирменный красный/оранжевый)

Success: #2ECC71, Warning: #F1C40F, Error: #E74C3C

Кнопки: радиус 12–16px, высота 56–64px, контрастный hover/active.

Тач: минимальный hit area 48×48, :focus-visible стили, большие чекбоксы/радио.

Клавиатура: онскрин-нумпад для телефона/суммы; маски ввода.

Анимации: лёгкие fade/slide (Framer Motion опц.).

Иллюстрации: 1–2 атмосферных изображения (не перегружаем).

Текст: кратко, по делу. Крупные заголовки (28–36px), текст 18–20px.

Адаптив: смартфоны, планшеты, landscape. Min-width 360px.

5) Безопасность и киоск-режим

Kiosk mode (Chromium):

запуск: chromium --kiosk --incognito --disable-pinch --overscroll-history-navigation=0 http://<IP>:3000/

опции: скрыть курсор через CSS (cursor: none;), отключить выделение (user-select: none;).

Антизависание: Idle-таймер 60 сек → авто-redirect на /.

Rate-limit: уже есть на бэке; на фронте — дедупликация запросов.

Ошибки сети: показывать понятные сообщения и кнопку «Назад».

6) Архитектура кода (фронт)

Стек: React 18, TS, Vite, Tailwind, React Router, Zustand, Zod, Dayjs, Axios, qrcode.

Структура:

/src
  /components
    Button.tsx
    Keypad.tsx        // нумпад
    PhoneField.tsx    // маска телефона
    TimePicker.tsx    // 12:00–00:00, шаг 30
    SlotCard.tsx
    Toast.tsx
  /pages
    Home.tsx
    Register.tsx
    Deposit.tsx
    Booking.tsx
    About.tsx
    Success.tsx
  /store
    client.ts
    booking.ts
    deposit.ts
    ui.ts
  /api
    http.ts          // axios
    catalog.ts
    hosts.ts
    slots.ts
    book.ts
    payments.ts      // (заготовка)
  /utils
    time.ts          // валидация окна 12:00–00:00
    format.ts
  main.tsx
  App.tsx


Ключевые компоненты:

TimePicker: предустановленные окна, шаг 30 минут, блокировка вне интервала.

SlotCard: время, доступно N, Забронировать.

Keypad: ввод суммы/кода без системной клавиатуры.

PhoneField: маска +7.

Toast: обратная связь.

7) Логика времени и отмены

Окно бронирования: 12:00–00:00 (00:00 — конец дня следующей даты не используем; если нужно — сдвигаем).

Шаг: 30 минут; длительность: 60/90/120 (или как в /api/slots).

Отмена: доступна, если start - now >= 2 часа. UI скрывает/дизейблит кнопку, если меньше 2 часов (ждём API).

8) i18n (опционально)

Используем react-i18next.

Файлы переводов ru.json, en.json, kz.json. Переключатель языка на главной.